name: OpenWRT - X86_64 Generic
on:
  push:
    branches:
  watch:
    types: started

env:
  URL: https://git.openwrt.org/openwrt/openwrt.git
  BRANCH: master
  FEEDS_FILE: feeds.conf.default
  CONFIG: x64.config
  P1: diy-part1.sh
  P2: diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true

jobs:
  x64:
    runs-on: ubuntu-latest
    container: sirherobrine23/openwrtbuild-ci:latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Copilando e Organizando
      run: |
        start_new
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Definindo Alguns arquivos
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Gerando Tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true'
      run: |
        echo RELEASE_NAME="$(TZ=UTC+3 date +"%d/%m/%Y-%H-%M-%S")-OpenWrt_WR941NDv3 Copliler 3" >> $GITHUB_ENV
        echo RELEASE_TAG="$(TZ=UTC+3 date +"%d/%m/%Y-%H-%M-%S")" >> $GITHUB_ENV
        echo "OpenWRT build - branch: $BRANCH ,Generic Device X86, Date build: $(TZ=UTC+3 date +"%d/%m/%Y-%H-%M-%S")" >> release.txt

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
